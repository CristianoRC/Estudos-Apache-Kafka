version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - kafka_network

  broker_01:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker_01
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_01:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
    networks:
      - kafka_network
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  admin:
    build: ./Admin/
    container_name: admin
    depends_on:
      broker_01:
        condition: service_healthy
    environment:
      CLIENT_ID: admin
      BROKER_01: broker_01:9092
      TOPIC: Example
      MESSAGES: 50000
    networks:
      - kafka_network

  producer:
    build: ./Producer/
    container_name: producer_01
    depends_on:
      admin:
        condition: service_completed_successfully
    environment:
      CLIENT_ID: producer
      BROKER_01: broker_01:9092
      TOPIC: Example
      MESSAGES: 50000
    networks:
      - kafka_network
      
  consumer:
    build: ./Consumer/
    container_name: consumer_01
    depends_on:
      producer:
        condition: service_completed_successfully
    environment:
      CLIENT_ID: consumer
      BROKER_01: broker_01:9092
      TOPIC: Example
    networks:
      - kafka_network

networks:
  kafka_network: